let mapleader = " "

set hlsearch
set ignorecase smartcase
set incsearch
set scrolloff=6
set visualbell

set NERDTree
set argtextobj
set commentary
set exchange
set functiontextobj
set ideajoin
set matchit
set peekaboo
set surround
set which-key

map 0 ^

nnoremap <silent> <C-d> <C-d>zz
nnoremap <silent> <C-u> <C-u>zz

nnoremap <A-1> :b 1<CR>
nnoremap <A-2> :b 2<CR>
nnoremap <A-3> :b 3<CR>
nnoremap <A-4> :b 4<CR>
nnoremap <A-5> :b 5<CR>
nnoremap <A-6> :b 6<CR>
nnoremap <A-7> :b 7<CR>
nnoremap <A-8> :b 8<CR>
nnoremap <A-9> :b 9<CR>
nnoremap <S-h> :bp<CR>
nnoremap <S-l> :bn<CR>

nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l
sethandler <c-j> a:vim
sethandler <c-k> a:vim

nnoremap <leader>l :nohlsearch<CR>
nnoremap <leader>q :q!<CR>
nnoremap <leader>w :w!<CR>
nnoremap <leader>wq :wq!<CR>

nmap <A-j> <Action>(MoveLineDown)
nmap <A-k> <Action>(MoveLineUp)
vmap <A-j> <Action>(MoveLineDown)
vmap <A-k> <Action>(MoveLineUp)

nmap <c-space> <Action>(ShowIntentionActions)
nmap <c-w>o <Action>(HideAllWindows)
nmap <leader>E <Action>(SelectInProjectView)
nmap <leader>F <Action>(FindInPath)
nmap <leader>T <Action>(ActivateStructureToolWindow)
nmap <leader>a <Action>(GotoAction)
nmap <leader>be <Action>(CloseAllEditorsButActive)
nmap <leader>db <Action>(ToggleLineBreakpoint)
nmap <leader>e <Action>(ActivateProjectToolWindow)
nmap <leader>f <Action>(GotoFile)
nmap <leader>g <Action>(ActivateCommitToolWindow)
nmap <leader>j <Action>(GotoNextError)
nmap <leader>k <Action>(GotoPreviousError)
nmap <leader>p <Action>(ReformatCode)
nmap <leader>r <Action>(Refactorings.QuickListPopupAction)
nmap <leader>t <Action>(ActivateTerminalToolWindow)
nmap <leader>z <Action>(ToggleZenMode)
nmap gS <Action>(GotoSuperMethod)
nmap gd <Action>(GotoDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gr <Action>(ShowUsages)
nmap gx <Action>(GotoDeclaration)

